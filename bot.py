"""
–ü—Ä–æ–µ–∫—Ç: –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç
–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏: python-telegram-bot, openai

ctrl + –ü–ö–ú  - –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≥–¥–µ —Å–æ–∑–¥–∞–Ω–∞
ctrl + /    - –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç

"""
# region

# conda create -n myenv python=3.12
# conda install python=3.13 ..
# conda activate myenv
# conda info --envs

# python --version

# end region

from telegram.ext import ApplicationBuilder, MessageHandler, filters, CallbackQueryHandler, CommandHandler
from gpt import *
from util import *                                           # –†–∞–∑–Ω–∏—Ü–∞ —Å import util


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update, context):
    dialog.mode = 'main'
    text = load_message('main')                               # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è text = –ø–æ–¥–≥—Ä—É–∂–∞–µ–º main.txt (–±–µ–∑ await –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è)
    await send_photo(update, context, 'main')           # –§–æ—Ç–æ –≤–º–µ—Å—Ç–µ —Å–æ /start
    await send_text(update, context, text)                    # –ü–µ—Ä–µ–¥–∞–µ–º text –ø–æ—Å–ª–µ /start
    await show_main_menu(update, context,
                         {
                            'start': '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞',
                            'profile': '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è Tinder-–ø—Ä–æ—Ñ–ª—è üòé',
                            'opener': '—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ü•∞',
                            'message': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–º–µ–Ω–∏ üòà',
                            'date': '–ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å–æ –∑–≤–µ–∑–¥–∞–º–∏ üî•',
                            'gpt': '–∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT üß†'
                                    })


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /gpt (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∫–∞–∫ /start)
async def gpt(update, context):
    dialog.mode = 'gpt'
    text = load_message('gpt')
    await send_photo(update, context, 'gpt')
    await send_text(update, context, text)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π gpt (–ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–æ–≤ –≤ if)
async def gpt_dialog(update, context):
    text = update.message.text                                                                # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
    prompt = load_prompt('gpt')                                                               # –•–æ—Ä–æ—à–∏–π —Ç–æ–Ω (load –≤—ã–∑–≤–∞–Ω–∞ –≤ –¥—Ä—É–≥–æ–º —Ñ–∞–π–ª–µ txt)
    answer = await chatgpt.send_question(prompt, text)                                       # –•–æ—Ä–æ—à–∏–π —Ç–æ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å txt —Ñ–∞–π–ª, –Ω–µ –ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–º
    # answer = await chatgpt.send_question("–Ω–∞–ø–∏—à–∏ —á–µ—Ç–∫–∏–π –∏ –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å", text)  # –ü–µ—Ä–µ–¥–∞–µ–º –≤ —á–∞—Ç gpt (–∑–∞–¥–∞–Ω–∏–µ, —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    await send_text(update, context, answer)                                                 # –ü—Ä–∏—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç gpt –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


# /date –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã:  –≤—ã–≤–æ–¥ –∫–Ω–æ–ø–æ–∫, —Å–æ–æ–±—â–µ–Ω–∏—è, —Ñ–æ—Ç–æ
async def date(update, context):
    dialog.mode = 'date'
    text = load_message('date')
    await send_photo(update, context, 'date')
    await send_text_buttons(update, context, text,
                            {
                            'date_grande': '–ê—Ä–∏–∞–Ω–∞ –ì—Ä–∞–Ω–¥–µ',
                            'date_robbie': '–ú–∞—Ä–≥–æ –†–æ–±–±–∏',
                            'date_zendaya': '–ó–µ–Ω–¥–µ—è',
                            'date_gosling': '–†–∞–π–∞–Ω –ì–æ—Å–ª–∏–Ω–≥',
                            'date_hardy': '–¢–æ–º –•–∞—Ä–¥–∏'
                                    })

# –ª–æ–≥–∏–∫–∞ –æ–±—â–µ–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞ —Å gpt
async def date_dialog(update, context):
    text = update.message.text                                             # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    my_message = await send_text(update, context, 'typing...')
    answer = await chatgpt.add_message(text)                               # –¥–æ–±–∞–≤–ª—è–µ–º_add —Ç–µ–∫—Å—Ç (await –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å)
    # await send_text(update, context, answer)                             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await my_message.edit_text(answer)

# –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞, –ø–æ–¥–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ, –ø—Ä–æ–º–ø—Ç–∞, –ø–µ—Ä–µ–¥–∞—á–∞ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è gpt
async def date_button(update, context):
    query = update.callback_query.data                                     # –≤ query –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è = date_grande etc
    await update.callback_query.answer()                                   # –¢–µ–ª–µ–≥—Ä–∞–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å...

    await send_photo(update, context, query)                               # ! –£–∑–Ω–∞—Ç—å –∫–∞–∫ query –ø–æ–ª—É—á–∞–µ—Ç —Ñ–æ—Ç–æ –∫–∞–∫-—Ç–æ –ø—É—Ç–∞–Ω–Ω–æ
    await send_text(update, context, "–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥–µ–≤—É—à–∫—É (–ø–∞—Ä–Ω—è) –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ –∑–∞ 5 —Å–æ–æ–±—â–µ–Ω–∏–π")

    prompt = load_prompt(query)                                            # ! –¢–∞–∫–∂–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –ø–æ–¥–≥—Ä—É–∂–∞–µ–º
    chatgpt.set_prompt(prompt)                                             # –ó–∞–¥–∞–Ω–∏–µ –¥–ª—è gpt


# /message
async def message(update, context):
    dialog.mode = 'message'
    text = load_message('message')
    await send_photo(update, context, 'message')
    await send_text_buttons(update, context, text,
                            {
                            'message_next': '—Å–ª–µ–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
                            'message_date': '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ'
                                    })
    dialog.list.clear()                                                   # –æ—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –∑–∞—Ö–æ–¥–æ–º –≤ message_dialog


async def message_button(update, context):
    query = update.callback_query.data                                    # –≤ query –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è = date_grande etc
    await update.callback_query.answer()                                  # –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º —Ä–µ–∫–æ–º–µ–Ω–¥—É—é—Ç

    prompt = load_prompt(query)
    user_chat_history = '\n\n'.join(dialog.list)                          # –û–±—ä–µ–¥–µ–Ω–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é \n\n
    my_message = await send_text(update, context, 'ChatGPT üß†processing...')
    answer = await chatgpt.send_question(prompt, user_chat_history)
    await my_message.edit_text(answer)


async def message_dialog(update, context):
    text = update.message.text
    dialog.list.append(text)

# /profile –±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –µ–µ –≤—ã–∑–æ–≤
async def profile(update, context):
    dialog.mode = 'profile'
    text = load_message('profile')
    await send_photo(update, context, 'profile')
    await send_text(update, context, text)

    # —Å—Ç–∏—Ä–∞–µ–º —á—Ç–æ–±—ã –ø—Ä–∏ —Å–ª–µ–¥ –≤—ã–∑–æ–≤–µ –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–ª–æ—Å—å
    dialog.user.clear()
    dialog.count = 0                                                    # —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
    await send_text(update, context, '–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')


async def profile_dialog(update, context):
    text = update.message.text
    dialog.count += 1

    if dialog.count == 1:
        dialog.user["age"] = text
        await send_text(update, context, '–ö–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ ?')
    elif dialog.count == 2:
        dialog.user["occupation"] = text
        await send_text(update, context, '–£ –≤–∞—Å –µ—Å—Ç—å —Ö–æ–±–±–∏?')
    elif dialog.count == 3:
        dialog.user["hobby"] = text
        await send_text(update, context, '–ß—Ç–æ –≤–∞–º –ù–ï –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ –ª—é–¥—è—Ö?')
    elif dialog.count == 4:
        dialog.user["annoys"] = text
        await send_text(update, context, '–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?')
    elif dialog.count == 5:
        dialog.user["goals"] = text

        prompt = load_prompt('profile')
        user_info = dialog_user_info_to_str(dialog.user)

        my_message = await send_text(update, context, "ChatGPT üß† processing...")
        answer = await chatgpt.send_question(prompt, user_info)
        await my_message.edit_text(answer)

# /opener –≤—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã
async def opener(update, context):
    dialog.mode = 'opener'
    text = load_message('opener')
    await send_photo(update, context, 'opener')
    await send_text(update, context, text)

    # —Å—Ç–∏—Ä–∞–µ–º —á—Ç–æ–±—ã –ø—Ä–∏ —Å–ª–µ–¥ –≤—ã–∑–æ–≤–µ –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–ª–æ—Å—å
    dialog.user.clear()
    dialog.count = 0  # —Å—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤
    await send_text(update, context, '–ò–º—è –¥–µ–≤—É—à–∫–∏?')


# –ª–æ–≥–∏–∫–∞ –¥–∏–∞–ª–æ–≥–∞
async def opener_dialog(update, context):
    text = update.message.text
    dialog.count += 1

    if dialog.count == 1:
        dialog.user["name"] = text
        await send_text(update, context, '–°–∫–æ–ª—å–∫–æ –µ–π –ª–µ—Ç ?')
    elif dialog.count == 2:
        dialog.user["age"] = text
        await send_text(update, context, '–û—Ü–µ–Ω–∏—Ç—å –µ–µ –≤–Ω–µ—à–Ω–æ—Å—Ç—å: 1-10 –±–∞–ª–ª–æ–≤')
    elif dialog.count == 3:
        dialog.user["handsome"] = text
        await send_text(update, context, '–ö–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç?')
    elif dialog.count == 4:
        dialog.user["occupation"] = text
        await send_text(update, context, '–¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?')
    elif dialog.count == 5:
        dialog.user["goals"] = text

        prompt = load_prompt('opener')                                  # –ó–∞–¥–∞–Ω–∏–µ
        user_info = dialog_user_info_to_str(dialog.user)

        my_message = await send_text(update, context, "ChatGPT üß† processing...")
        answer = await chatgpt.send_question(prompt, user_info)
        await my_message.edit_text(answer)


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
async def hello(update, context):
    if dialog.mode == 'gpt':                                              # –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤ –∫–∞–∫–æ–º –º–æ–¥—É–ª–µ –º—ã –æ–±—â–∞–µ–º—Å—è
        await gpt_dialog(update, context)
    elif dialog.mode == 'date':
        await date_dialog(update, context)
    elif dialog.mode == 'message':
        await message_dialog(update, context)
    elif dialog.mode == 'profile':
        await profile_dialog(update, context)
    elif dialog.mode == 'opener':
        await opener_dialog(update, context)
    else:
        await send_text(update, context, '*–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏* '.lower()
                        + update.message.text)                            # –¥—É–±–ª–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
        await send_photo(update, context, 'avatar_main')            # –§–æ—Ç–æ

        await send_text(update, context, f'–ü—Ä–∏–≤–µ—Ç *{update.effective_user.username}* ')       # –û—Ç–≤–µ—Ç
        # await send_text(update, context, '–ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º?')       # –û—Ç–≤–µ—Ç

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–º —á–∞—Ç–µ
        await send_text_buttons(update, context, '–ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º –ª–æ–≤–µ–ª–∞—Åüòé?',
                                {
                                'start': '–¥–∞',
                                'stop': '–Ω–µ—Ç'
                                        })


# –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–Ω–æ–ø–æ–∫
async def hello_button(update, context):
    query = update.callback_query.data                                     # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏–∑ –æ–±—ä–µ–∫—Ç–∞ update
    if query == 'start':
        await send_text(update, context, f'–û—Ç–ª–∏—á–Ω–æ! ‚ù§Ô∏è –≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º –∏–∑ –º–µ–Ω—é \n\n  {'\t'*25} /start" \n\n –≠—Ç–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–ø–æ–º–Ω–∏—Ç—Å—è —Ç–µ–±–µ!')
    else:
        await send_text(update, context, '–ü–æ–¥—É–º–∞–π –µ—â–µ —Ä–∞–∑ üòé –í–∑–≥–ª—è–Ω–∏ –Ω–∞ –º–µ–Ω—é /start')


# –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –¥–∏–∞–ª–æ–≥–æ–≤
dialog = Dialog()                                                          # —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Dialog()
dialog.mode = None                                                         # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –¥–∏–∞–ª–æ–≥–∞: /Start, /gpt ...
dialog.list = []                                                           # –ù–µ –ø–æ–Ω—è—Ç–Ω–æ –ø–æ—á–µ–º—É —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É, —á—Ç–æ —ç—Ç–æ ?
dialog.count = 0                                                           # –°—á–µ—Ç—á–∏–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è profile
dialog.user = {}                                                           # –°–ª–æ–≤–∞—Ä—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏

chatgpt = ChatGptService(token='javcgkAld/r/7U60nS8WDUhWeWVYkZbhjQYpKBFGTvoj5842ast7Pxc54epaCxHRBWXa4vjUutckFaoaUmyOdt62mPPZjjrSFzHlklUvRxjKkD54HiY1iMRLus7TxOkcmPElgqCRPBocX6wJsuWbUTuGkgPNjhYwE08Bvau9oVOiaBcWnUrI/ewY+ccVqx7dnAN4A7RhT46B8BjZjVtU/H8jZakz1cJir+37f/KOL/cTVnmJo=')


# –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ –¥–≤–∏–∂–æ–∫ telegram
app = ApplicationBuilder().token("7862010297:AAHwltMSAh9_Fi9mYQJMqkOapaBK0yvw5dE").build()

# –î–µ–ª–∞–µ–º –•–µ–Ω–¥–ª–µ—Ä—ã - –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–¥–ø–∏—Å–∏ —Å—Ç–∞—Ä—Ç, –≤—ã–∑–æ–≤–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è start
app.add_handler(CommandHandler('Start', start))                   # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /start –≤ telegram
app.add_handler(CommandHandler('gpt', gpt))                       # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /gpt –≤ telegram
app.add_handler(CommandHandler('date', date))
app.add_handler(CommandHandler('message', message))
app.add_handler(CommandHandler('profile', profile))
app.add_handler(CommandHandler('opener', opener))

# & ~filters.COMMAND - —á—Ç–æ–±—ã –Ω–µ –≤—ã–≤–æ–¥–∏–ª –æ—Ç–≤–µ—Ç—ã –ø–æ –Ω–∞–∂–∞—Ç—é –Ω–∞ –∫–æ–º–∞–Ω–¥—ã —Ç–∏–ø–∞ /gpt
# ~(–¢–∏–ª—å–¥–∞ –∑–Ω–∞—á–∏—Ç –Ω–µ—Ç) –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, hello))      # –†–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏


app.add_handler(CallbackQueryHandler(date_button, pattern="^date_.*"))       # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–µ–º –æ—Ç–±–æ—Ä –≤—ã—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω
app.add_handler(CallbackQueryHandler(message_button, pattern="^message_.*")) # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Å–æ–∑–¥–∞–µ–º –æ—Ç–±–æ—Ä –≤—ã—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ —à–∞–±–ª–æ–Ω
app.add_handler(CallbackQueryHandler(hello_button))                          # CallbackQueryHandler –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
app.run_polling()
